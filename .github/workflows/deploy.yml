on:
  push:
    branches:
      - master
      - main
jobs:
  push_compose:
    name: Push docker-compose.yml to remote server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/${{ secrets.REMOTE_USER }}/app/"
          overwrite: true

  build_and_push_images:
    name: Push image to DockerHub
    runs-on: ubuntu-latest
    needs: push_compose
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: List target directory
        run: ls -l target

      - name: Clean Docker cache
        run: docker builder prune --all --force

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          sudo docker build -t sadwalther/crud:latest .

      - name: Push Docker image to DockerHub
        run: |
          sudo docker push sadwalther/crud:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build_and_push_images, push_compose]
    steps:
      - name: Connect with SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.REMOTE_USER }}/app/
            
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} > .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} >> .env
            echo SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} >> .env
            echo SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} >> .env
            
            sudo -S docker stop app-app-1
            sudo -S docker rm app-app-1
            sudo -S docker rmi sadwalther/crud:latest    
            sudo -S docker-compose up --force-recreate -d